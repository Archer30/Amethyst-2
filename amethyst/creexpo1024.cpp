//#include"majaczek.h"
#include "stdafx.h"

/*
struct replace_byte {
	unsigned int address;
	unsigned char new_byte;
};

struct replace_dword {
	unsigned int address;
	unsigned int new_dword;
};
*/

extern void __stdcall ReloadExperienceConfig2(void);

void creexpo1024(void) {
	replace_byte the_bytes1[] = {

		{0x0071804D, 0x03}, // 0x0071804A + 3 _ AND ECX, 0x03ff 
		{0x00718052 , 0x16}, // 0x00718050 + 2 _ SHL ECX, 0x16
		{0x0071840A , 0x16},
		{0x0071840D, 0x03},
		{0x00718425, 0x03},
		{0x0071842A , 0x16},
		{0x00718447, 0x03},
		{0x0071844C , 0x16},
		{0x0071853E , 0x16},
		{0x00718542, 0x03},
		{0x007192D7 , 0x16},
		{0x007192DB, 0x03},
		{0x00719308, 0x03},
		{0x0071930D , 0x16},
		{0x0071943E , 0x16}, // 0x0071943C + 2
		
		// {0x0071944C, 0x03}, // 0x0071943f + 3
		{0x00719442, 0x03}, // 0x0071943f + 3

		{0x00719477 , 0x16},
		{0x0071947B, 0x03},
		{0x00726D74, 0x03},
		{0x00726D79 , 0x16},
		{0x00726DAD , 0x16},
		{0x00726DB0, 0x03},
		{0x00727304, 0x03},
		{0x00727309 , 0x16},
		{0x0072748F, 0x03},
		{0x00727494 , 0x16},
		{0x0072787A , 0x16},
		{0x0072787E, 0x03},
		{0x00727B4E , 0x16},
		{0x00727B52, 0x03},
		{0x00727C89 , 0x16},
		{0x00727C8D, 0x03},
		{0x00727CC9 , 0x16},
		{0x00727CCD, 0x03},
		// {0x007398F2 , 0x16},
		// {0x007398F6, 0x03},
		// {0x00739939 , 0x16},
		// {0x0073993C, 0x03},
		// {0x00739947, 0x03},
		// {0x0073994C , 0x16},
		// {0x00739968 , 0x16},
		// {0x0073996C, 0x03},
		// {0x0073997D, 0x03},
		// {0x00739982 , 0x16},
		// {0x0073AC26 , 0x16},
		// {0x0073AC29, 0x03},
		// {0x0073AC4E, 0x03},
		// {0x0073AC53 , 0x16},
		{0x0073CA9B , 0x16},
		{0x0073CA9E, 0x03},
		{0x0073CAC7, 0x03},
		{0x0073CACC , 0x16},
		{0x0073CB2D , 0x16},
		{0x0073CB30, 0x03},
		{0x0073CBBD, 0x03},
		{0x0073CBC2 , 0x16},
		{0x0076213A, 0x03},
		{0x0076213F , 0x16},
		{0x00766547 , 0x16},
		{0x0076654A, 0x03},
		{0x00766569, 0x03},
		{0x0076656E , 0x16},
		{0x00766726 , 0x16},
		{0x0076672A, 0x03},
		{0x00766746, 0x03},
		{0x0076674B , 0x16},



		{0x0,0x0} // stop_mark
	};  

	replace_byte the_bytes2[]={
		{0x00727E50, 0x04 },
		{0x0071ACDF, 0x04 },
		{0x0071B555, 0x04 },
		{0x0071B611, 0x04 },
		{0x007278CD, 0x04 },
		{0x007280AD, 0x04 },

		{ 0x00726512, 0x04 },
		{ 0x0071acdf, 0x04 },
		{ 0x0071b611, 0x04 },
		{ 0x00726a01, 0x04 },
		{ 0x0071b555, 0x04 },
		{ 0x004b4f13, 0x04 }, // not sure

		{ 0x0053f347, 0x03 }, // not sure
		{ 0x0053f33e, 0x03 }, // not sure

		{ 0x0071a9db, 0x04 },

		// { 0x00719945, 0x15 }, // shl eax, 0x4 // 2020-04-09
		// { 0x00719a07, 0x15 }, // shl ecx, 0x4 // 2020-04-09

		{ 0x00703da7, 0x60 }, //pushad
		{ 0x00703da8, 0xb8 }, //mov eax, next_four_bytes
		//------------------
		{ 0x00703dad, 0xFF }, { 0x00703dae, 0xD0 }, //call eax
		{ 0x00703daf, 0x90 },
		{ 0x00703db0, 0x90 },
		{ 0x00703db1, 0x90 },
		{ 0x00703db2, 0x90 },
		{ 0x00703db3, 0x90 },
		{ 0x00703db4, 0x90 },
		{ 0x00703db5, 0x61 }, //popad

		{ 0x0, 0x0 } // stop_mark
	};

	replace_dword the_dwords[]={
		{0x0071b02d, MONSTERS_AMOUNT },
		{0x0071ad7e, MONSTERS_AMOUNT *0x154 },

		{0x719316,0x003FFFFF },

		{ 0x00703da9, (int) ReloadExperienceConfig2},

		{	0,0 } 
	};

	int i = 0;
	do {
		*(unsigned char*) the_bytes1[i].address = the_bytes1[i].new_byte;
		i++;
	} while (the_bytes1[i].address);
	

	i = 0;
	do {
		*(unsigned char*)the_bytes2[i].address = the_bytes2[i].new_byte;
		i++;
	} while (the_bytes2[i].address);

	int j = 0;
	do {
		*(unsigned int*)the_dwords[j].address = the_dwords[j].new_dword;
		j++;
	} while (the_dwords[j].address);

}